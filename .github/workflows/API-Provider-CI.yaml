name: API-Provider-CI

on:
    push:
      branches:
      - main
    pull_request:
    workflow_dispatch:
      
      

env:
    #oas_file: oas/openapi-transformed.json
    results_file: ReadyAPI-Tests/report.xml

jobs:
  #lint-api:
    #name: Run Spectral
    #runs-on: ubuntu-latest
    #steps:
      # Check out the repository
    #  - uses: actions/checkout@v2
    #  - uses: actions/setup-node@v3
    #  - run: |
    #      npm install --save -D @stoplight/spectral-owasp-ruleset
    #      npm install --save -D @stoplight/spectral-cli
      # Run Spectral
    #  - uses: stoplightio/spectral-action@latest
    #    with:
    #      file_glob: 'apis/*.yaml'
    #      spectral_ruleset: '.spectral.yaml'

  test-api:
    #needs: lint-api
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@main
      - name: Setup the stack
        run: docker-compose up -d
      - name: Get Container Name
        id: get-container
        run: |
          docker ps -a
          CONTAINER_ID=$(docker ps -aqf "name=webinar-security-by-design_web_1")
          echo "::set-output name=container_id::$CONTAINER_ID"
          echo $CONTAINER_ID > container_id.txt
      - name: Display Container Name
        run: cat container_id.txt
      - name: Migrate DB and Seed within ${{ steps.get-container.outputs.container_id }}
        run: |
          docker exec -t ${{ steps.get-container.outputs.container_id }} alembic upgrade heads || echo true
          docker exec ${{ steps.get-container.outputs.container_id }} python src/fixtures.py || echo true
      - name: Test local
        run: chmod ugo+rwx ReadyAPI-Tests && ./launchReadyAPITestRunner.sh
        env:
          PROJECT_FOLDER: ReadyAPI-Tests
          PROJECT_FILE: 'secure-by-design-readyapi-project.xml'
          SLM_API_KEY: ${{ secrets.SLM_API_KEY }} 
          ENDPOINT: http://localhost:8000